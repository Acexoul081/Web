type Video{
    id: ID!
    user: User!
    link: String!
    title: String!
    view: Int!
    like: [LikeDetail!]!
    dateUpload: String!
    datePublish: String!
    description: String!
    thumbnail: String!
    category: Int!
    label: Boolean!
    privacy: Boolean!
    comments: [Comment!]!
    location: String!
}

type LikeDetail{
    video: Video!
    user:User!
    like: Boolean!
}

input newVideo{
    link: String!
    title: String!
    description: String!
    thumbnail: String!
    category: Int!
    label: Boolean!
    privacy: Boolean!
    location: String!
    datePublish: String
}

extend type Mutation{
    createVideo(input:newVideo): Video!
    updateVideo(id: ID!, input:newVideo): Video!
    updateVideoView(id: ID!): Video!
    updateVideoLike(id:ID!):LikeDetail!
    updateVideoDislike(id:ID!):LikeDetail!
    deleteVideo(id: ID!):Boolean!
}

extend type Query{
    videos:[Video!]!
    getVideo(id: ID!): Video!
    getVideosByCategory(category: Int!):[Video!]!
    getVideosByUser(userId: ID!):[Video!]!
    getVideosByUserLimit(userId:ID!, limit:Int!):[Video!]!
    getLastUploadedVideo(userId:ID!):Video!
    getVideoSearch(keyword: String!):[Video!]!
    getTrendingVideo:[Video!]!
    getRecommendationVideo(category: Int!, videoID: ID!):[Video!]!
    getVideoByLocation(location:String!):[Video!]!
    getVideosByTime(time:String!, keyword:String!):[Video!]!
}